#!/bin/sh
#
# A hook script to validate Terraform code before committing.
#
# This script runs terraform fmt and basic validation on all staged .tf files.
# If terraform fmt makes changes, the changes are added to the commit.
# If validation fails, the commit is blocked.

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

print_error() {
    echo "${RED}[✗]${NC} $1" >&2
}

print_success() {
    echo "${GREEN}[✓]${NC} $1"
}

print_warning() {
    echo "${YELLOW}[⚠]${NC} $1"
}

# Get the list of staged .tf files
TF_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.tf$')

if [ -z "$TF_FILES" ]; then
    exit 0
fi

echo "🔍 Pre-commit validation for Terraform files..."

# Check if terraform is available
if ! command -v terraform > /dev/null 2>&1; then
    print_warning "Terraform not found, skipping validation"
    exit 0
fi

# Format the staged .tf files
echo "Running terraform fmt on staged files..."
NEED_FORMATTING=false
for file in $TF_FILES; do
    if terraform fmt -check=false -write=true "$file" | grep -q "."; then
        NEED_FORMATTING=true
    fi
done

if [ "$NEED_FORMATTING" = true ]; then
    print_success "Terraform files formatted"
    # Add the formatted files back to the staging area
    git add $TF_FILES
fi

# Basic syntax validation for staged files
echo "Running basic syntax validation..."
for file in $TF_FILES; do
    # Check for balanced braces
    open_braces=$(grep -o '{' "$file" | wc -l)
    close_braces=$(grep -o '}' "$file" | wc -l)
    if [ "$open_braces" -ne "$close_braces" ]; then
        print_error "Unbalanced braces in $file: $open_braces opening, $close_braces closing"
        exit 1
    fi
    
    # Check for basic syntax issues
    if grep -q "resource.*{$" "$file" | grep -v ".*{$"; then
        print_warning "Potential syntax issues in $file"
    fi
done

# Quick security check for staged files
echo "Running security check..."
for file in $TF_FILES; do
    # Check for potential secrets in Terraform files
    if grep -q "ghp_[A-Za-z0-9]\{36\}" "$file" || \
       grep -q "sk-[A-Za-z0-9]\{48\}" "$file" || \
       grep -q "AKIA[A-Z0-9]\{16\}" "$file"; then
        print_error "Potential secrets found in $file"
        echo "Remove secrets from Terraform files and use Secret Manager instead"
        exit 1
    fi
done

print_success "Pre-commit validation passed"
exit 0